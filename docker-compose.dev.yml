# Srcful & Helium Gateway

version: "2.4"

x-environment: &shared_env
  - REST_SERVICE_PORT: 80 # should correspond to the port in the web service below
  - REST_SERVICE_PORT_INTERNAL: 80 # should correspond to the port in the web service below

services:

  # Reverse proxy service
  traefik:
    image: traefik:v2.10
    container_name: eGW-traefik
    network_mode: host  # Use host networking to route to other host network containers
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
    restart: always
    labels:
      traefik.enable: true
      # Define the web router that listens on port 80
      traefik.http.routers.web-router.entrypoints: web
      traefik.http.routers.web-router.rule: HostRegexp(`{host:.+}`)
      traefik.http.routers.web-router.priority: 1  # Lower priority as fallback
      traefik.http.services.web-service.loadbalancer.server.port: 5000
      traefik.http.routers.web-router.service: web-service
      
      # Define the API router for your existing web service
      traefik.http.routers.api-router.entrypoints: web
      traefik.http.routers.api-router.rule: HostRegexp(`{host:.+}`) && PathPrefix(`/api`)
      traefik.http.routers.api-router.priority: 100  # Higher priority for API routes
      traefik.http.services.api-service.loadbalancer.server.port: 5000
      traefik.http.routers.api-router.service: api-service



  web:
    build: ./server
    container_name: eGW-web
    ports:
      - 5000:5000
    restart: always
    network_mode: host
    environment:
      <<: *shared_env
      REST_SERVICE_PORT: 5000
      REST_SERVICE_PORT_INTERNAL: 5000
      TEST_PRIVATE_KEY: ${TEST_PRIVATE_KEY}
      TEST_SERIAL: ${TEST_SERIAL}
      TEST_PUBLIC_KEY: ${TEST_PUBLIC_KEY}

    labels:
      io.balena.features.dbus: 1 # needed for the wifi provisioning calls
      io.balena.features.supervisor-api: 1 # needed to get the ip of the device when running on balena os in server/balena_get_host_ip.sh
      traefik.enable: true
    volumes:
      - srcful-data:/data/srcful
      - /var/run/dbus:/host/run/dbus

  bluetooth:
    build: ./bluetooth
    container_name: eGW-ble
    privileged: true
    network_mode: host # could be needed for ble communication, test?
    environment:
      <<: *shared_env
      # GPIO_BUTTON_PIN: 7
    labels:
      io.balena.features.dbus: 1 # needed for ble communication over bluez
      io.balena.features.kernel-modules: 1 # why needed? test?
      io.balena.features.sysfs: 1 # needed to set the bluetooth parameters in bluetooth/docker_entrypoint.sh
    volumes:
      - /var/run/dbus:/host/run/dbus
      - /sys:/sys
      - /lib/modules:/lib/modules
    restart: always
    depends_on:
      - web

volumes:
  srcful-data:
